gpt2
INFO 09-24 06:50:08 llm_engine.py:100] Initializing an LLM engine (v0.4.2) with config: model='gpt2', speculative_config=None, tokenizer='gpt2', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.float16, max_seq_len=1023, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), seed=0, served_model_name=gpt2)
INFO 09-24 06:50:09 utils.py:660] Found nccl from library /u/busekorkmaz/.config/vllm/nccl/cu12/libnccl.so.2.18.1
INFO 09-24 06:50:09 selector.py:27] Using FlashAttention-2 backend.
INFO 09-24 06:50:11 weight_utils.py:199] Using model weights format ['*.safetensors']
INFO 09-24 06:50:13 model_runner.py:175] Loading model weights took 0.2378 GB
INFO 09-24 06:50:36 gpu_executor.py:114] # GPU blocks: 113241, # CPU blocks: 7281
INFO 09-24 06:50:58 model_runner.py:937] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 09-24 06:50:58 model_runner.py:941] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 09-24 06:51:29 model_runner.py:1017] Graph capturing finished in 30 secs.
selected subjects:
business
law
psychology
biology
chemistry
history
other
health
economics
math
physics
computer science
philosophy
engineering

------------------------------------------------------------
Sender: LSF System <lsfadmin@cccxc549.pok.ibm.com>
Subject: Job 265046: <python /dccstor/autofair/busekorkmaz/factual-bias-mitigation/scripts/mmlu/evaluate_vllm.py --model gpt2 --ntrain 2 --global_record_file eval_record_collection_gpt2.csv> in cluster <cccCluster> Exited

Job <python /dccstor/autofair/busekorkmaz/factual-bias-mitigation/scripts/mmlu/evaluate_vllm.py --model gpt2 --ntrain 2 --global_record_file eval_record_collection_gpt2.csv> was submitted from host <cccxl011> by user <busekorkmaz> in cluster <cccCluster> at Tue Sep 24 05:58:37 2024
Job was executed on host(s) <4*cccxc549>, in queue <x86_6h>, as user <busekorkmaz> in cluster <cccCluster> at Tue Sep 24 06:46:41 2024
</u/busekorkmaz> was used as the home directory.
</dccstor/autofair/busekorkmaz/factual-bias-mitigation> was used as the working directory.
Started at Tue Sep 24 06:46:41 2024
Terminated at Tue Sep 24 12:49:27 2024
Results reported at Tue Sep 24 12:49:27 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
python /dccstor/autofair/busekorkmaz/factual-bias-mitigation/scripts/mmlu/evaluate_vllm.py --model gpt2 --ntrain 2 --global_record_file eval_record_collection_gpt2.csv
------------------------------------------------------------

TERM_RUNLIMIT: job killed after reaching LSF run time limit.
Exited with exit code 140.

Resource usage summary:

    CPU time :                                   21466.80 sec.
    Max Memory :                                 1201 MB
    Average Memory :                             1168.85 MB
    Total Requested Memory :                     90112.00 MB
    Delta Memory :                               88911.00 MB
    Max Swap :                                   -
    Max Processes :                              3
    Max Threads :                                39
    Run time :                                   21611 sec.
    Turnaround time :                            24650 sec.

The output (if any) is above this job summary.



PS:

Read file </dccstor/autofair/busekorkmaz/factual-bias-mitigation/scripts/mmlu/logs/gpt2/error.log> for stderr output of this job.

